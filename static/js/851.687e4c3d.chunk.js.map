{"version":3,"file":"static/js/851.687e4c3d.chunk.js","mappings":"mSAgIA,UAvGgB,WACd,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,UAAS,MAAK,eAA7CC,EAAW,KAAEC,EAAc,KAClC,GAAwCF,EAAAA,EAAAA,UAAS,CAC/CG,WAAY,EACZC,YAAa,EACbC,aAAc,EACdC,UAAW,IACX,eALKC,EAAY,KAAEC,EAAe,MAOpCC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeC,EAAAA,IAAkBC,MAAK,SAACC,GACrCC,QAAQC,IAAIF,EAAIG,MAChBd,EAAeW,EAAIG,MACnBF,QAAQC,IAAIE,KAAKC,MAAML,EAAIG,KAAK,GAAGG,OAAO,GAAGC,UAAUC,KACzD,KACAX,EAAAA,EAAAA,IAAeY,EAAAA,IAAqBV,MAAK,SAACC,GACxCL,EAAgBK,EAClB,GACF,GAAG,IAEH,IAUoBU,EAMdC,EAAe,SAACC,GACpB,IACE,OAAOR,KAAKC,MAAMO,EAAK,GAAGL,SAG5B,CAFE,MAAOM,GACP,MAAO,CAAEL,KAAM,GAAIM,MAAO,GAC5B,CACF,EAEA,OACE,iCACE,UAAC,KAAI,YACH,SAAC,KAAI,CAACC,UAAU,OAAOC,GAAI,EAAGC,GAAI,EAAE,UAClC,SAAC,KAAU,CAACC,YAAY,MAAMC,IAAKC,OAErC,SAAC,KAAI,WACH,UAAC,KAAS,YACR,SAAC,KAAU,iCACX,SAAC,KAAS,wMAKV,UAAC,KAAI,YACH,SAAC,KAAI,CAACL,UAAU,OAAOC,GAAI,EAAE,UAC3B,UAAC,KAAS,oBAAQtB,EAAaJ,WAAa,UAE9C,SAAC,KAAI,WACH,UAAC,KAAS,qBAASI,EAAaH,kBAElC,SAAC,KAAI,CAACwB,UAAU,OAAOC,GAAI,EAAE,UAC3B,UAAC,KAAS,yBApCJN,GAqCmBhB,EAAaD,UAAY,KAAY4B,QAAQ,GApC3EC,KAAKC,IAAIb,GAAO,IACnBY,KAAKE,KAAKd,IAAQY,KAAKC,IAAIb,GAAO,KAAMW,QAAQ,GAAK,IACrDC,KAAKE,KAAKd,GAAOY,KAAKC,IAAIb,UAqCpB,SAAC,KAAI,WACH,UAAC,KAAS,+BACUhB,EAAaF,aAAe,KAAY6B,QAAQ,oBAO9E,SAAC,KAAI,UACS,OAAXjC,QAAW,IAAXA,OAAW,EAAXA,EAAaqC,KAAI,SAACC,EAAMC,GAAK,OAC5B,SAAC,KAAI,CAACZ,UAAU,OAAOC,GAAI,EAAGC,GAAI,EAAE,UAClC,UAAC,KAAK,CAACW,MAAO,CAAEC,MAAO,QAAS,WAC9B,SAAC,KAAU,CACTX,YAAY,MACZC,IAAKR,EAAae,EAAKpB,QAAQQ,MAC/BgB,QAAS,kBAlEAC,EAkEoBL,EAAKK,eAjE9C9C,EAAS,QAAS,CAAE+C,MAAO,CAAED,UAAAA,KADT,IAACA,CAkEmC,EAC5ChB,UAAU,oBAEZ,UAAC,KAAS,YACR,SAAC,KAAU,UAAEJ,EAAae,EAAKpB,QAAQE,QACvC,SAAC,KAAS,0CACV,SAAC,KAAO,CAACsB,QAAS,kBApERG,EAoE6BP,EAAKO,QAnExDC,EAAAA,EAAAA,IAAkB,GAAD,OAAIC,EAAAA,GAAY,YAAIF,IAAMlC,MAAK,SAACC,IAC/CoC,EAAAA,EAAAA,GAAc,CAAEC,OAAQ,UAAWC,QAAS,sBAC5CjD,EAAeD,EAAYmD,QAAO,SAACC,GAAC,OAAKA,EAAEP,KAAOA,CAAE,IACtD,IAJqB,IAACA,CAoEqC,EAAC,yCAXZN,EAcnC,QAKjB,C","sources":["views/profile/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardImage,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { httpRequestDelete, httpRequestGet, httpRequestPost } from 'src/utils/webUtil'\r\nimport {\r\n  WS_BOOKMARKS,\r\n  WS_BOOKMARKS_OWN,\r\n  WS_COLLECTION_LISTING,\r\n  WS_COLLECTION_STATS,\r\n} from 'src/constants/constants'\r\n\r\nimport solanaImg from 'src/assets/images/Solana_logo.png'\r\nimport anim from 'src/assets/images/anim.webp'\r\nimport { setToastState } from 'src/states/toastState'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate()\r\n  const [itemDetails, setItemDetails] = useState(null)\r\n  const [statsDetails, setStatsDetails] = useState({\r\n    floorPrice: 0,\r\n    listedCount: 0,\r\n    avgPrice24hr: 0,\r\n    volumeAll: 0,\r\n  })\r\n\r\n  useEffect(() => {\r\n    httpRequestGet(WS_BOOKMARKS_OWN).then((res) => {\r\n      console.log(res.data)\r\n      setItemDetails(res.data)\r\n      console.log(JSON.parse(res.data[0].Tokens[0].metadata).name)\r\n    })\r\n    httpRequestGet(WS_COLLECTION_STATS).then((res) => {\r\n      setStatsDetails(res)\r\n    })\r\n  }, [])\r\n\r\n  const handleOnClick = (tokenMint) => {\r\n    navigate('/item', { state: { tokenMint } })\r\n  }\r\n\r\n  const handleBookmark = (id) => {\r\n    httpRequestDelete(`${WS_BOOKMARKS}/${id}`).then((res) => {\r\n      setToastState({ status: 'success', message: 'Bookmark Removed!' })\r\n      setItemDetails(itemDetails.filter((i) => i.id !== id))\r\n    })\r\n  }\r\n  const kFormatter = (num) => {\r\n    return Math.abs(num) > 999\r\n      ? Math.sign(num) * (Math.abs(num) / 1000).toFixed(1) + 'k'\r\n      : Math.sign(num) * Math.abs(num)\r\n  }\r\n\r\n  const stringFormat = (json) => {\r\n    try {\r\n      return JSON.parse(json[0].metadata)\r\n    } catch (e) {\r\n      return { name: '', image: '' }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol className=\"mb-4\" sm={6} lg={3}>\r\n          <CCardImage orientation=\"top\" src={anim} />\r\n        </CCol>\r\n        <CCol>\r\n          <CCardBody>\r\n            <CCardTitle>My Bookmarked NFT</CCardTitle>\r\n            <CCardText>\r\n              Meekolony Passes are a series of 10,000 unique passes that give special perks,\r\n              cosmetics & bonuses for Tatsumeeko, a modern fantasy play-and-earn MMORPG-lite for\r\n              Discord, Web & Mobile!\r\n            </CCardText>\r\n            <CRow>\r\n              <CCol className=\"mb-4\" sm={6}>\r\n                <CCardText>Floor {statsDetails.floorPrice / 1000000000}</CCardText>\r\n              </CCol>\r\n              <CCol>\r\n                <CCardText>Listed {statsDetails.listedCount}</CCardText>\r\n              </CCol>\r\n              <CCol className=\"mb-4\" sm={6}>\r\n                <CCardText>\r\n                  Total Vol {kFormatter((statsDetails.volumeAll / 1000000000).toFixed(1))}\r\n                </CCardText>\r\n              </CCol>\r\n              <CCol>\r\n                <CCardText>\r\n                  Avg. Sale (24h) {(statsDetails.avgPrice24hr / 1000000000).toFixed(2)}\r\n                </CCardText>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardBody>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        {itemDetails?.map((item, index) => (\r\n          <CCol className=\"mb-4\" sm={6} lg={3} key={index}>\r\n            <CCard style={{ width: '100%' }}>\r\n              <CCardImage\r\n                orientation=\"top\"\r\n                src={stringFormat(item.Tokens).image}\r\n                onClick={() => handleOnClick(item.tokenMint)}\r\n                className=\"cursor-pointer\"\r\n              />\r\n              <CCardBody>\r\n                <CCardTitle>{stringFormat(item.Tokens).name}</CCardTitle>\r\n                <CCardText>Tatsumeeko: Meekolony Pass</CCardText>\r\n                <CButton onClick={() => handleBookmark(item.id)}>Remove from bookmark</CButton>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        ))}\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n"],"names":["navigate","useNavigate","useState","itemDetails","setItemDetails","floorPrice","listedCount","avgPrice24hr","volumeAll","statsDetails","setStatsDetails","useEffect","httpRequestGet","WS_BOOKMARKS_OWN","then","res","console","log","data","JSON","parse","Tokens","metadata","name","WS_COLLECTION_STATS","num","stringFormat","json","e","image","className","sm","lg","orientation","src","anim","toFixed","Math","abs","sign","map","item","index","style","width","onClick","tokenMint","state","id","httpRequestDelete","WS_BOOKMARKS","setToastState","status","message","filter","i"],"sourceRoot":""}