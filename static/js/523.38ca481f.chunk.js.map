{"version":3,"file":"static/js/523.38ca481f.chunk.js","mappings":"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","sources":["constants/constants.js","routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js","states/userProfileState.js","utils/webUtil.js"],"sourcesContent":["// API URLS\r\nexport const WS_LOGIN = '/auth/login'\r\nexport const WS_SIGNUP = '/auth/signup'\r\nexport const WS_BOOKMARKS = '/bookmarks'\r\nexport const WS_BOOKMARKS_OWN = '/bookmarks/own'\r\nexport const WS_ACTIVITIES = '/activities'\r\nexport const WS_NOTIFICATIONS_OWN = '/notifications/own'\r\nexport const WS_NOTIFICATIONS_BULKREAD = '/notifications/bulkRead'\r\nexport const WS_NOTIFICATIONS_READALL = '/notifications/readAll'\r\nexport const WS_NOTIFICATIONS_COUNT = '/notifications/own/unread'\r\n\r\nexport const WS_COLLECTION_LISTING = '/magiceden/collection'\r\nexport const WS_COLLECTION_STATS = '/magiceden/collection/stats'\r\nexport const WS_TOKEN_METADATA = '/magiceden/token'\r\n\r\n// STATUS CODES\r\n// 400 - Bad request (Missing params, body)\r\n// 401 - Unauthorised (Bad token, etc.)\r\nexport const SUCCESS_RESPONSE_CODE = '200'\r\nexport const ERROR_RESPONSE_CODE = '500' // HTTP CODE 200\r\nexport const INVALID_ACCESS_TOKEN_RESPONSE_CODE = '501'\r\n\r\nexport const KEY_USER_PROFILE = 'yDKUIQH1sd'\r\n","import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Item = React.lazy(() => import('./views/item/Item'))\nconst Profile = React.lazy(() => import('./views/profile/Profile'))\nconst Notification = React.lazy(() => import('./views/notifications/Notification'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/item', name: 'Item', element: Item },\n  { path: '/profile', name: 'Profile', element: Profile },\n  { path: '/notification', name: 'Notification', element: Notification },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return <CFooter></CFooter>\n}\n\nexport default React.memo(AppFooter)\n","import React, { useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  CBadge,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { httpRequestGet } from 'src/utils/webUtil'\nimport { WS_NOTIFICATIONS_COUNT } from 'src/constants/constants'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n  const [notificationCount, setNotificationCount] = useState(0)\n  useEffect(() => {\n    httpRequestGet(`${WS_NOTIFICATIONS_COUNT}`).then((res) => {\n      setNotificationCount(res.data.count)\n    })\n  }, [])\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink to=\"/profile\" component={NavLink}>\n              My Bookmark\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink to=\"/notification\" component={NavLink}>\n              Notification\n              {notificationCount > 0 && (\n                <CBadge shape=\"pill\" color=\"info\">\n                  {notificationCount}\n                </CBadge>\n              )}\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { cilSpeedometer } from '@coreui/icons'\nimport { CNavItem } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav } from '@coreui/react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\nimport tatsuworks from 'src/assets/images/tatsu.webp'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <img src={tatsuworks} alt=\"\" className=\"tatsuworks-logo\"></img>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React, { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useUserProfileStore } from 'src/states/userProfileState'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  const navigate = useNavigate()\n  const [userProfile] = useUserProfileStore()\n\n  useEffect(() => {\n    if (!userProfile.token) {\n      navigate('/login')\n    }\n    console.log('here')\n  }, [navigate, userProfile.token])\n\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import { useState, useEffect } from 'react'\r\nimport { KEY_USER_PROFILE } from 'src/constants/constants'\r\n\r\nconst store = {\r\n  state: JSON.parse(localStorage.getItem(KEY_USER_PROFILE)) || {},\r\n  setState(value) {\r\n    if (value) {\r\n      this.state = value\r\n      this.setters.forEach((setter) => setter(this.state))\r\n      localStorage.setItem(KEY_USER_PROFILE, JSON.stringify(value))\r\n    }\r\n  },\r\n  setters: [],\r\n}\r\n\r\n// Bind the setState function to the store object so\r\n// we don't lose context when calling it elsewhere\r\nstore.setState = store.setState.bind(store)\r\n\r\n// this is the custom hook we'll call on components.\r\nexport function useUserProfileStore() {\r\n  const [state, set] = useState(store.state)\r\n  if (!store.setters.includes(set)) {\r\n    store.setters.push(set)\r\n  }\r\n\r\n  useEffect(\r\n    () => () => {\r\n      store.setters = store.setters.filter((setter) => setter !== set)\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [state, store.setState]\r\n}\r\n\r\nexport function getApiToken() {\r\n  return store.state?.token || null\r\n}\r\n\r\n// For non component usage\r\nexport function setUserProfileState(value) {\r\n  store.setState(value)\r\n}\r\n\r\nexport function getUserProfileState() {\r\n  return store.state\r\n}\r\n","import axios from 'axios'\r\nimport { getApiToken } from 'src/states/userProfileState'\r\nimport { setToastState } from 'src/states/toastState'\r\nimport { setUserProfileState } from 'src/states/userProfileState'\r\nimport { KEY_USER_PROFILE } from 'src/constants/constants'\r\n\r\nconst version = 'v1'\r\n\r\nconst instance = axios.create({\r\n  baseURL: `${process.env[`REACT_APP_BASE_API_URL`]}${version}`,\r\n  timeout: 10000,\r\n})\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  if (getApiToken()) {\r\n    config.headers.Authorization = `Bearer ${getApiToken()}`\r\n  }\r\n  return config\r\n}, undefined)\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(undefined, function (res) {\r\n  if (res.response.data.statusCode === 401) {\r\n    setUserProfileState({})\r\n    localStorage.removeItem(KEY_USER_PROFILE)\r\n  }\r\n  setToastState({ status: 'danger', message: res?.response?.data?.message })\r\n  return Promise.reject(res)\r\n})\r\n\r\nconst httpRequestGet = (url, config) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .get(url, config)\r\n      .then((res) => {\r\n        resolve(res.data)\r\n      })\r\n      .catch((e) => reject(e))\r\n  })\r\n}\r\n\r\nconst httpRequestPost = (url, body, config) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .post(url, body, config)\r\n      .then((res) => {\r\n        resolve(res.data)\r\n      })\r\n      .catch((e) => reject(e))\r\n  })\r\n}\r\n\r\nconst httpRequestPut = (url, body, config) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .put(url, body, config)\r\n      .then((res) => {\r\n        resolve(res.data)\r\n      })\r\n      .catch((e) => reject(e))\r\n  })\r\n}\r\n\r\nconst httpRequestDelete = (url, config) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .delete(url, config)\r\n      .then((res) => {\r\n        resolve(res.data)\r\n      })\r\n      .catch((e) => reject(e))\r\n  })\r\n}\r\n\r\nexport { httpRequestGet, httpRequestPost, httpRequestPut, httpRequestDelete }\r\n"],"names":["WS_LOGIN","WS_SIGNUP","WS_BOOKMARKS","WS_BOOKMARKS_OWN","WS_ACTIVITIES","WS_NOTIFICATIONS_OWN","WS_NOTIFICATIONS_READALL","WS_NOTIFICATIONS_COUNT","WS_COLLECTION_LISTING","WS_COLLECTION_STATS","WS_TOKEN_METADATA","KEY_USER_PROFILE","path","exact","name","element","React","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","className","href","map","breadcrumb","key","AppContent","lg","Suspense","fallback","color","idx","to","replace","AppFooter","dispatch","useDispatch","sidebarShow","useSelector","state","useState","notificationCount","setNotificationCount","useEffect","httpRequestGet","then","res","data","count","position","fluid","onClick","type","icon","cilMenu","size","component","NavLink","shape","AppSidebarNav","items","navLink","badge","text","navItem","item","rest","Component","navGroup","String","toggler","visible","startsWith","CNavItem","cilSpeedometer","customClassName","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","src","tatsuworks","alt","navigation","navigate","useNavigate","useUserProfileStore","userProfile","token","console","log","store","JSON","parse","localStorage","getItem","setState","value","this","setters","forEach","setter","setItem","stringify","set","includes","filter","getApiToken","setUserProfileState","bind","instance","axios","baseURL","process","timeout","interceptors","request","use","config","headers","Authorization","undefined","response","statusCode","removeItem","setToastState","status","message","Promise","reject","url","resolve","get","catch","e","httpRequestPost","body","post","httpRequestDelete","delete"],"sourceRoot":""}