{"version":3,"file":"static/js/878.ef045c3a.chunk.js","mappings":"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","sources":["constants/constants.js","states/userProfileState.js","utils/webUtil.js","../node_modules/@coreui/icons/js/free/cil-user.js","views/pages/login/Login.js","../node_modules/@coreui/icons/js/free/cil-lock-locked.js"],"sourcesContent":["// API URLS\r\nexport const WS_LOGIN = '/auth/login'\r\nexport const WS_SIGNUP = '/auth/signup'\r\nexport const WS_BOOKMARKS = '/bookmarks'\r\nexport const WS_BOOKMARKS_OWN = '/bookmarks/own'\r\nexport const WS_ACTIVITIES = '/activities'\r\nexport const WS_NOTIFICATIONS_OWN = '/notifications/own'\r\nexport const WS_NOTIFICATIONS_BULKREAD = '/notifications/bulkRead'\r\nexport const WS_NOTIFICATIONS_READALL = '/notifications/readAll'\r\nexport const WS_NOTIFICATIONS_COUNT = '/notifications/own/unread'\r\n\r\nexport const WS_COLLECTION_LISTING = '/magiceden/collection'\r\nexport const WS_COLLECTION_STATS = '/magiceden/collection/stats'\r\nexport const WS_TOKEN_METADATA = '/magiceden/token'\r\n\r\n// STATUS CODES\r\n// 400 - Bad request (Missing params, body)\r\n// 401 - Unauthorised (Bad token, etc.)\r\nexport const SUCCESS_RESPONSE_CODE = '200'\r\nexport const ERROR_RESPONSE_CODE = '500' // HTTP CODE 200\r\nexport const INVALID_ACCESS_TOKEN_RESPONSE_CODE = '501'\r\n\r\nexport const KEY_USER_PROFILE = 'yDKUIQH1sd'\r\n","import { useState, useEffect } from 'react'\r\nimport { KEY_USER_PROFILE } from 'src/constants/constants'\r\n\r\nconst store = {\r\n  state: JSON.parse(localStorage.getItem(KEY_USER_PROFILE)) || {},\r\n  setState(value) {\r\n    if (value) {\r\n      this.state = value\r\n      this.setters.forEach((setter) => setter(this.state))\r\n      localStorage.setItem(KEY_USER_PROFILE, JSON.stringify(value))\r\n    }\r\n  },\r\n  setters: [],\r\n}\r\n\r\n// Bind the setState function to the store object so\r\n// we don't lose context when calling it elsewhere\r\nstore.setState = store.setState.bind(store)\r\n\r\n// this is the custom hook we'll call on components.\r\nexport function useUserProfileStore() {\r\n  const [state, set] = useState(store.state)\r\n  if (!store.setters.includes(set)) {\r\n    store.setters.push(set)\r\n  }\r\n\r\n  useEffect(\r\n    () => () => {\r\n      store.setters = store.setters.filter((setter) => setter !== set)\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [state, store.setState]\r\n}\r\n\r\nexport function getApiToken() {\r\n  return store.state?.token || null\r\n}\r\n\r\n// For non component usage\r\nexport function setUserProfileState(value) {\r\n  store.setState(value)\r\n}\r\n\r\nexport function getUserProfileState() {\r\n  return store.state\r\n}\r\n","import axios from 'axios'\r\nimport { getApiToken } from 'src/states/userProfileState'\r\nimport { setToastState } from 'src/states/toastState'\r\nimport { setUserProfileState } from 'src/states/userProfileState'\r\nimport { KEY_USER_PROFILE } from 'src/constants/constants'\r\n\r\nconst version = 'v1'\r\n\r\nconst instance = axios.create({\r\n  baseURL: `${process.env[`REACT_APP_BASE_API_URL`]}${version}`,\r\n  timeout: 10000,\r\n})\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  if (getApiToken()) {\r\n    config.headers.Authorization = `Bearer ${getApiToken()}`\r\n  }\r\n  return config\r\n}, undefined)\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(\r\n  function (res) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // SESSION TIMEOUT HANDLING\r\n\r\n    if (res.status !== 200 && res.status !== 201 && res.data.code !== 200) {\r\n      if (res.data.code === 501) {\r\n        setUserProfileState({})\r\n        localStorage.removeItem(KEY_USER_PROFILE)\r\n      }\r\n      setToastState({ status: 'danger', message: res?.data?.message })\r\n      return Promise.reject(res)\r\n    }\r\n    return res\r\n  },\r\n  function (res) {\r\n    setToastState({ status: 'danger', message: res?.response?.data?.message })\r\n    return Promise.reject(res)\r\n  },\r\n)\r\n\r\nconst httpRequestGet = (url, config) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .get(url, config)\r\n      .then((res) => {\r\n        resolve(res.data)\r\n      })\r\n      .catch((e) => reject(e))\r\n  })\r\n}\r\n\r\nconst httpRequestPost = (url, body, config) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .post(url, body, config)\r\n      .then((res) => {\r\n        resolve(res.data)\r\n      })\r\n      .catch((e) => reject(e))\r\n  })\r\n}\r\n\r\nconst httpRequestPut = (url, body, config) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .put(url, body, config)\r\n      .then((res) => {\r\n        resolve(res.data)\r\n      })\r\n      .catch((e) => reject(e))\r\n  })\r\n}\r\n\r\nconst httpRequestDelete = (url, config) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance\r\n      .delete(url, config)\r\n      .then((res) => {\r\n        resolve(res.data)\r\n      })\r\n      .catch((e) => reject(e))\r\n  })\r\n}\r\n\r\nexport { httpRequestGet, httpRequestPost, httpRequestPut, httpRequestDelete }\r\n","export const cilUser = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"]","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { httpRequestPost } from 'src/utils/webUtil'\nimport { WS_LOGIN } from 'src/constants/constants'\nimport { useUserProfileStore } from 'src/states/userProfileState'\nimport { useNavigate } from 'react-router-dom'\nimport { setToastState } from 'src/states/toastState'\n\nconst Login = () => {\n  const navigate = useNavigate()\n  const [, setUserProfile] = useUserProfileStore()\n  const [loginDetails, setLoginDetails] = useState({\n    username: '',\n    password: '',\n  })\n\n  const handleOnChange = (e, key) => {\n    setLoginDetails((prev) => ({\n      ...prev,\n      [key]: e.target.value,\n    }))\n  }\n\n  const handleLogin = () => {\n    httpRequestPost(WS_LOGIN, loginDetails).then((res) => {\n      setUserProfile(res.data)\n      setToastState({ status: 'success', message: 'Login Success' })\n      // NAV TO DASHBOARD\n      navigate('/')\n    })\n  }\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        onChange={(e) => handleOnChange(e, 'username')}\n                        placeholder=\"Email\"\n                        autoComplete=\"email\"\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        onChange={(e) => handleOnChange(e, 'password')}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton onClick={handleLogin} color=\"primary\" className=\"px-4\">\n                          Login\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","export const cilLockLocked = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"]"],"names":["WS_LOGIN","WS_SIGNUP","WS_BOOKMARKS","WS_BOOKMARKS_OWN","WS_ACTIVITIES","WS_NOTIFICATIONS_OWN","WS_NOTIFICATIONS_READALL","WS_NOTIFICATIONS_COUNT","WS_COLLECTION_LISTING","WS_COLLECTION_STATS","WS_TOKEN_METADATA","KEY_USER_PROFILE","store","state","JSON","parse","localStorage","getItem","setState","value","this","setters","forEach","setter","setItem","stringify","useUserProfileStore","useState","set","includes","push","useEffect","filter","getApiToken","token","setUserProfileState","bind","instance","axios","baseURL","process","timeout","interceptors","request","use","config","headers","Authorization","undefined","response","res","status","data","code","removeItem","setToastState","message","Promise","reject","httpRequestGet","url","resolve","get","then","catch","e","httpRequestPost","body","post","httpRequestDelete","delete","cilUser","navigate","useNavigate","setUserProfile","username","password","loginDetails","setLoginDetails","handleOnChange","key","prev","target","className","md","icon","onChange","placeholder","autoComplete","cilLockLocked","type","xs","onClick","color","style","width","to","active","tabIndex"],"sourceRoot":""}