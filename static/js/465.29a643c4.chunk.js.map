{"version":3,"file":"static/js/465.29a643c4.chunk.js","mappings":"kQAsEA,UArDqB,WACnB,OAAsDA,EAAAA,EAAAA,UAAS,IAAG,eAA3DC,EAAmB,KAAEC,EAAsB,KAE5CC,EAAU,YACdC,EAAAA,EAAAA,IAAe,GAAD,OAAIC,EAAAA,KAAwBC,MAAK,SAACC,GAC9CL,EAAuBK,EAAIC,KAAKA,KAClC,GACF,GAEAC,EAAAA,EAAAA,YAAU,WACRN,GACF,GAAG,IASH,OACE,iCACE,SAAC,KAAI,WACH,SAAC,KAAI,CAACO,MAAO,CAAEC,UAAW,SAAU,UAClC,SAAC,KAAO,CAACC,UAAU,OAAOC,QAXZ,YACpBC,EAAAA,EAAAA,IAAgB,GAAD,OAAIC,EAAAA,KAA4BT,MAAK,SAACC,IACnDS,EAAAA,EAAAA,GAAc,CAAEC,OAAQ,UAAWC,QAAS,YAC9C,IACAf,GACF,EAMyD,2BAKrD,SAAC,KAAI,WACH,SAAC,KAAK,CAACO,MAAO,CAAES,MAAO,QAAS,UAC9B,UAAC,KAAM,YACL,SAAC,IAAU,WACT,UAAC,KAAS,YACR,SAAC,KAAgB,CAACC,MAAM,MAAK,yBAC7B,SAAC,KAAgB,CAACA,MAAM,MAAK,wBAGjC,SAAC,KAAU,UACRnB,EAAoBoB,KAAI,SAACC,EAAcC,GAAK,OAC3C,UAAC,KAAS,YACR,SAAC,KAAc,UAAED,EAAaE,cAC9B,SAAC,KAAc,UAAEF,EAAaG,KAAKC,eAFrBH,EAGJ,eAQ5B,C","sources":["views/notifications/Notification.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { httpRequestGet, httpRequestPost } from 'src/utils/webUtil'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { WS_NOTIFICATIONS_OWN, WS_NOTIFICATIONS_READALL } from 'src/constants/constants'\r\nimport { setToastState } from 'src/states/toastState'\r\n\r\nconst Notification = () => {\r\n  const [notificationDetails, setNotificationDetails] = useState([])\r\n\r\n  const callAPI = () => {\r\n    httpRequestGet(`${WS_NOTIFICATIONS_OWN}`).then((res) => {\r\n      setNotificationDetails(res.data.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAPI()\r\n  }, [])\r\n\r\n  const handleReadAll = () => {\r\n    httpRequestPost(`${WS_NOTIFICATIONS_READALL}`).then((res) => {\r\n      setToastState({ status: 'success', message: 'Read All' })\r\n    })\r\n    callAPI()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol style={{ textAlign: 'right' }}>\r\n          <CButton className=\"mb-2\" onClick={handleReadAll}>\r\n            Read All\r\n          </CButton>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCard style={{ width: '100%' }}>\r\n          <CTable>\r\n            <CTableHead>\r\n              <CTableRow>\r\n                <CTableHeaderCell scope=\"col\">ActivityId</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"col\">Read</CTableHeaderCell>\r\n              </CTableRow>\r\n            </CTableHead>\r\n            <CTableBody>\r\n              {notificationDetails.map((notification, index) => (\r\n                <CTableRow key={index}>\r\n                  <CTableDataCell>{notification.activityId}</CTableDataCell>\r\n                  <CTableDataCell>{notification.read.toString()}</CTableDataCell>\r\n                </CTableRow>\r\n              ))}\r\n            </CTableBody>\r\n          </CTable>\r\n        </CCard>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n"],"names":["useState","notificationDetails","setNotificationDetails","callAPI","httpRequestGet","WS_NOTIFICATIONS_OWN","then","res","data","useEffect","style","textAlign","className","onClick","httpRequestPost","WS_NOTIFICATIONS_READALL","setToastState","status","message","width","scope","map","notification","index","activityId","read","toString"],"sourceRoot":""}